#Setup Visore
PROJECT(QRealFourier)

#Setup CMake
CMAKE_MINIMUM_REQUIRED(VERSION 2.8.9)
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fpermissive")
IF(NOT ${CMAKE_SYSTEM_NAME} MATCHES "Windows")
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")
ENDIF()

#Setup directory paths
SET(ROOT ${CMAKE_CURRENT_SOURCE_DIR})
SET(FFTREAL ${ROOT}/fftreal)
SET(HEADERS ${ROOT}/headers)
SET(SOURCES ${ROOT}/sources)
SET(EXAMPLES ${ROOT}/examples)

#Setup installation directory paths
SET(INSTALL_LIB_DIR lib)
SET(INSTALL_INCLUDE_DIR include)

#Setup Packaging and Version
SET(CMAKE_MODULE_PATH ${ROOT}/cmake)
INCLUDE(Version)

#Setup Qt
SET(CMAKE_AUTOMOC ON)
SET(CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PATH} ${QT_DIRECTORY})
SET(CMAKE_INCLUDE_CURRENT_DIR ON)
FIND_PACKAGE(Qt5Core)

#Include common headers
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR} ${ROOT}/headers ${FFTREAL})

#Initiate source files
FILE(GLOB SOURCE_FILES ${SOURCES}/*.cpp)
FILE(GLOB FFTREAL_SOURCE_FILES ${FFTREAL}/*.hpp)
FILE(GLOB HEADER_FILES ${HEADERS}/*.h)
FILE(GLOB FFTREAL_HEADER_FILES ${FFTREAL}/*.h)
FILE(GLOB INSTALL_HEADER_FILES ${HEADERS}/qfouriertransformer.h ${HEADERS}/qcomplexnumber.h ${HEADERS}/qfouriercalculator.h ${HEADERS}/qwindowfunction.h)

#Create shared library
ADD_LIBRARY(qrealfourier SHARED ${HEADER_FILES} ${FFTREAL_HEADER_FILES} ${SOURCE_FILES} ${FFTREAL_SOURCE_FILES})
QT5_USE_MODULES(qrealfourier Core)
SET_TARGET_PROPERTIES(qrealfourier PROPERTIES LINKER_LANGUAGE CXX)
SET_TARGET_PROPERTIES(qrealfourier PROPERTIES VERSION "${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}")
SET_TARGET_PROPERTIES(qrealfourier PROPERTIES SOVERSION "${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}")

#Install library and header
INSTALL(TARGETS qrealfourier DESTINATION ${INSTALL_LIB_DIR})
INSTALL(FILES ${INSTALL_HEADER_FILES} DESTINATION ${INSTALL_INCLUDE_DIR})

#Create example cases
ADD_EXECUTABLE(example1 ${EXAMPLES}/example1.cpp)
TARGET_LINK_LIBRARIES(example1 qrealfourier)
QT5_USE_MODULES(example1 Core)
ADD_EXECUTABLE(example2 ${EXAMPLES}/example2.cpp)
TARGET_LINK_LIBRARIES(example2 qrealfourier)
QT5_USE_MODULES(example2 Core)
ADD_EXECUTABLE(example3 ${EXAMPLES}/example3.cpp)
TARGET_LINK_LIBRARIES(example3 qrealfourier)
QT5_USE_MODULES(example3 Core)

#Packaging
IF(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
	INCLUDE(Packaging)
ENDIF()
